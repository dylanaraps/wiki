STORAGE
________________________________________________________________________________

This article will provide general guidance on the process of preparing a disk 
device (SSD or HDD) for a new installation of KISS Linux.  Advanced storage
formats (e.g. RAID and NVME) and requirements are considered out of scope.


[0.0] Index
________________________________________________________________________________

- Overview                                                                 [1.0]
    - Definitions                                                          [1.1]
    - Tools                                                                [1.2]
- Partitioning Schemas                                                     [2.0]
    - Partition Number, Format and Size                                    [2.1]
    - Swap Partition or Swap File                                          [2.2]
    - EFI/UEFI or BIOS                                                     [2.3]
- Formatting                                                               [3.0]
    - Filesystems                                                          [3.1]
    - Formatting a Disk                                                    [3.2]
    - Swap File                                                            [3.3]
    - Swap Partition                                                       [3.4]
- Partitioning Examples                                                    [4.0]
    - GPT with BIOS BOOT    (no swap)                                      [4.1]

- References                                                               [5.0]


[1.0] Overview
________________________________________________________________________________

Second to kernel configuration, preparing a disk device for installing KISS 
Linux is probably one of the most intimidating topics for new UNIX users to 
tackle. This process is not only highly user preferential, but also dependent on 
the tools that you use for creating the necessary partitions. Therefore, the
first step to any successful installation is to understand the termonology and
tools that may be required throughout the process.


    [1.1] Terminology
    ____________________________________________________________________________
    
    +------------------+-------------------------------------------------------+
    |                  |                                                       |
    |   Block Device   |   Represents an abstract interface to the disk.       |
    |                  |   User programs can use these block devices to        |
    |                  |   interact with the disk without worrying about       |
    |                  |   whether the drives are SATA, SCSI, or something     |
    |                  |   else. (e.g. /dev/sd*, /dev/nvme0n1, etc)            |
    |                  |                                                       |
    |   Partitions     |   Represent smaller, more manageable block devices.   |
    |                  |   There are currently two standard partitioning       |
    |                  |   technologies in use: DOS disklabel (sometimes       |
    |                  |   also called MBR) and GPT; these are somewhat        |
    |                  |   loosely tied to the two boot process types legacy   |
    |                  |   (BIOS) boot and UEFI.                               |
    |                  |                                                       |
    |   DOS            |   The DOS disklabel setup uses 32-bit identifiers     |
    |   Disklabel      |   for the start sector and length of the partitions,  |
    |                  |   and supports three partition types: primary,        |
    |                  |   extended, and logical. Primary partitions have      |
    |                  |   their information stored in the master boot         |
    |                  |   record itself - a very small (usually 512 bytes)    |
    |                  |   location at the very beginning of a disk. Due to    |
    |                  |   this small space, only four primary partitions      |
    |                  |   are supported (for instance, /dev/sda1 to           |
    |                  |   /dev/sda4).                                         |
    |                  |                                                       |
    |   GPT            |   GPT (GUID Partition Table) setup uses 64-bit        |
    |                  |   identifiers for the partitions. The location in     |
    |                  |   which it stores the partition information is much   |
    |                  |   bigger than the 512 bytes of a DOS disklabel,       |
    |                  |   which means there is practically no limit on the    |
    |                  |   amount of partitions for a GPT disk. Also the       |
    |                  |   size of a partition is bounded by a much greater    |
    |                  |   limit (almost 8 ZiB - yes, zettabytes).             |
    |                  |                                                       |
    |                  |   When a system's software interface between the      |
    |                  |   operating system and firmware is UEFI (instead of   |
    |                  |   BIOS), GPT is almost mandatory as compatibility     |
    |                  |   issues will arise with DOS disklabel.               |
    |                  |                                                       |
    |   ROOTFS         |   ROOTFS (Root Filesystem) is the primary partition   |
    |                  |   where the entire system is directly or indirectly   |
    |                  |   mounted to (e.g. /dev, /home, etc).                 |
    |                  |                                                       |
    |   BIOS BOOT      |   BIOS boot partition is a very small (1 to 2 MB)     |
    |                  |   partition in which boot loaders like GRUB2 can      |
    |                  |   put additional data that doesn't fit in the         |
    |                  |   allocated storage (a few hundred bytes in case of   |
    |                  |   MBR) and cannot be placed elsewhere.                |
    |                  |                                                       |
    |   SWAP FILES     |   Swap space can take the form of a disk partition    | 
    |                  |   or a file. Users may create a swap space during     | 
    |                  |   installation or at any later time as desired.       |
    |                  |   Swap space can be used for two purposes, to         |
    |                  |   extend the virtual memory beyond the installed      | 
    |                  |   physical memory (RAM), a.k.a "enable swap", and     | 
    |                  |   also for suspend-to-disk support.                   |
    |                  |                                                       |
    |                  |   If it is beneficial to enable swap depends on the   |
    |                  |   amount of installed physical memory, and the        | 
    |                  |   amount of memory required to run all the desired    |  
    |                  |   programs. If the amount of physical memory is       | 
    |                  |   less than the required amount, then it is           | 
    |                  |   beneficial to enable swap.                          |
    |                  |                                                       |
    |                  |   The biggest drawback to enabling swap is its        | 
    |                  |   lower performance, as swap operations are usually   | 
    |                  |   significantly slower than directly accessing data   | 
    |                  |   in RAM.                                             | 
    |                  |                                                       |
    +------------------+-------------------------------------------------------+

    * Due to using 32-bit identifiers, DOS partitioning tables cannot handle 
      disks that are >2 TBs in size. Also, unless a extended partition is 
      created, DOS disklables supports a maximum of four partitions.
    * Using GPT on a BIOS-based computer works, but then one cannot dual-boot 
      with a Microsoft Windows operating system. The reason is that Microsoft 
      Windows will boot in UEFI mode if it detects a GPT partition label. Also 
      note that some buggy (old) motherboard firmware configured to boot in 
      BIOS/CSM/legacy mode might also have problems with booting from GPT  
      labeled disks.

    [1.2] Tools
    ____________________________________________________________________________

    Depending on which Live CD or distribution (e.g. Arch or Gentoo) KISS Linux
    is installed from, you may find one or several of the following tools at 
    your disposal:

    - gdisk
    - parted
    - fdisk
    
    
[2.0] Partitioning Schemas
________________________________________________________________________________

Before creating a partition or multiple partitions, there are several things to
take into consideration:

    [2.1] Partition Number, Format and Size
    ____________________________________________________________________________
    
    The number of partitions required is highly variable and dependent on the
    environment.  The following table provides examples of common partition
    schemas, formats and recommended sizes:
    
    +-------------------------------+------------------------------------------+
    |    Schema Description         |   Partition (Type,      Format, Size)    |
    +-------------------------------+------------------------------------------+
    |                               |                                          |
    |    GPT + BIOS                 |   /dev/sda1 (BIOS BOOT, EXT4,   128MB)   |
    |    without swap partition     |   /dev/sda2 (UEFI ESP,  FAT32,  33M)     |
    |                               |   /dev/sda3 (ROOTFS,    EXT4,   *)       |
    |                               |                                          |
    |    GPT + BIOS                 |   /dev/sda1 (BIOS BOOT, EXT4,   128MB)   |
    |    with swap partition        |   /dev/sda2 (UEFI ESP,  FAT32,  33M)     |
    |                               |   /dev/sda3 (swap,      swap,   >512MB)  |
    |                               |   /dev/sda4 (ROOTFS,    EXT4,   *)       |
    |                               |                                          |
    +-------------------------------+------------------------------------------+
    
    * In most cases, the user will desire the root partition to span the remain 
      space on the disk device.
    * Building big packages like rust or firefox from source require a large 
      amount of memory. Make sure that your physical RAM and swap add up to 
      ~10GB or more of size. Or consider the usage of a dynamical growing swap 
      file.
    * A separate /home partition may be preferred, especially if you plan on 
      re-installing KISS Linux in the future and would like to preserve any 
      custom configuration files, downloads, etc.

      
    [2.2] Swap Partition or Swap File
    ____________________________________________________________________________
    
    (placeholder text)
    
    
    [2.3] EFI/UEFI or BIOS
    ____________________________________________________________________________

    Depending on your chosen boot process type UEFI or BIOS, you may need to 
    create additional partitions. Typically, these additional partitions are
    created before specifying the root partition.  
    
    - For UEFI, a ESP partition must be created and FAT formatted (preferably 
      FAT32) [1].
    - BIOS boot partition is needed when a GPT partition layout is used with 
      GRUB2 in BIOS/Legacy mode. It is not required when booting in EFI/UEFI 
      mode.
    
    
[3.0] Formatting
________________________________________________________________________________

Now that the partitions are created, it is time to place a filesystem on them. 
In the next section the various file systems that Linux supports are described.


    [3.1] Filesystems
    ____________________________________________________________________________

    (place holder text)


    [3.2] Formatting a Disk
    ____________________________________________________________________________
    
    In order for a disk to be used as an installation medium, the storage space 
    must be formatted to the desired file system type.  The following are 
    example commands that are useful for creating those partition types. Note 
    that not all commands will be available on your distribution Live CD.  For 
    this reason, I would recommend consulting the individuals distribution help 
    pages.
    
    +------------------+-------------------+-----------------------------------+
    |    Filesystem    |   Command         |   Userspace Utilities (Repo)      |
    +------------------+-------------------+-----------------------------------+
    |                  |                   |                                   |
    |    btrfs         |   mkfs.btrfs      |   btrfs-progs (Community)         |
    |                  |                   |                                   |
    |    ext2          |   mkfs.ext2       |   e2fsprogs (Extra)               |
    |                  |                   |                                   |
    |    ext3          |   mkfs.ext3       |   e2fsprogs (Extra)               |
    |                  |                   |                                   |
    |    ext4          |   mkfs.ext4       |   e2fsprogs (Extra)               |
    |                  |                   |                                   |
    |    f2fs          |   mkfs.f2fs       |   f2fs-tools                      |
    |                  |                   |                                   |
    |    jfs           |   mkfs.jfs        |   jfsutils                        |
    |                  |                   |                                   |
    |    reiserfs      |   mkfs.reiserfs   |   reiserfsprogs                   |
    |                  |                   |                                   |
    |    xfs           |   mkfs.xfs        |   xfsprogs                        |
    |                  |                   |                                   |
    |    vfat          |   mkfs.vfat       |   dosfstools                      |
    |                  |                   |                                   |
    |    NTFS          |   mkfs.ntfs       |   ntfs-3g (Community)             |
    |                  |                   |                                   |
    |    swap          |   mkswap          |                                   |
    |                  |                   |                                   |    
    +------------------+-------------------+-----------------------------------+


    [3.3] Swap File
    ____________________________________________________________________________    
    
    As an alternative to creating an entire partition, a swap file offers the 
    ability to vary its size on-the-fly, and is more easily removed altogether. 
    This may be especially desirable if disk space is at a premium.

    To create a swap file, use dd commmand and specify the file size (remember 
    to change 512, for 512MB, with the appropriate desired swap file size):
    
    +--------------------------------------------------------------------------+
    |                                                                          |
    |   dd if=/dev/zero of=/swapfile bs=1M count=512 status=progress           |
    |                                                                          |
    +--------------------------------------------------------------------------+
    
    Set the right permissions:

    +--------------------------------------------------------------------------+
    |                                                                          |
    |   chmod 600 /swapfile                                                    |
    |                                                                          |
    +--------------------------------------------------------------------------+
    
    After creating the correctly sized file, format it to swap:
    
    +--------------------------------------------------------------------------+
    |                                                                          |
    |   mkswap /swapfile                                                       |
    |                                                                          |
    +--------------------------------------------------------------------------+
   
    Activate the swap file:
   
    +--------------------------------------------------------------------------+
    |                                                                          |
    |   swapon /swapfile                                                       |
    |                                                                          |
    +--------------------------------------------------------------------------+
    
    To remove a swap file, it's a simple as disabling the current one and 
    deleting the swap file:
    
    +--------------------------------------------------------------------------+
    |                                                                          |
    |   swapoff /swapfile                                                      |
    |   rm -f /swapfile                                                        |
    |                                                                          |
    +--------------------------------------------------------------------------+
    
    Lastly, you will want to edit your fstab configuration to add an entry for 
    the swap file.
    

[4.0] Partitioning Examples
________________________________________________________________________________

The following are step-by-step partitioning examples, based on the schemas 
defined herin:

    [4.1] GPT with EFI (no swap partition)
    ____________________________________________________________________________
    
    This example assumes the target device block of /dev/sda, using gdisk for 
    the actual partitioning process.
    
    +--------------------------------------------------------------------------+
    |                                                                          |
    |    root@localhost ~ # gdisk /dev/sda                                     |
    |    Create GPT partition table:                                           |
    |    Command: o                                                            |
    |    This option deletes all partitions and creates a new protective MBR.  |
    |    Proceed? (Y/N): y                                                     |
    |                                                                          |
    |    Create Partition 1 (/boot):                                           |
    |    Command: n                                                            |
    |    Partition Number:  (RETURN key for 1)                                 |
    |    First sector:                                                         |
    |    Last sector: +128M                                                    |
    |    Hex Code:                                                             |
    |                                                                          |
    |    Create Partition 2 (UEFI ESP):                                        |
    |    Command: n                                                            |
    |    Partition Number:  (RETURN key for 2)                                 |
    |    First sector:                                                         |
    |    Last sector: +33M                                                     |
    |    Hex Code: EF00                                                        |
    |                                                                          |
    |    Create Partition 3 (/):                                               |
    |    Command: n                                                            |
    |    Partition Number:  (RETURN key for 3)                                 |
    |    First sector:                                                         |
    |    Last sector:  (RETURN key for rest of disk)                           |
    |    Hex Code:                                                             |
    |                                                                          |
    |    Write Partition Table To Disk:                                        |
    |    Command: w                                                            |
    |    Do you want to proceed? (Y/N): Y                                      |
    |                                                                          |
    +--------------------------------------------------------------------------+

    [4.2] GPT with EFI BOOT (with swap partition)
    ____________________________________________________________________________
    
    This example assumes the target device block of /dev/sda, using gdisk for 
    the actual partitioning process and a swap file size of 512MB.
    
    +--------------------------------------------------------------------------+
    |                                                                          |    
    |    root@localhost ~ # gdisk /dev/sda                                     |
    |    Create GPT partition table:                                           |
    |    Command: o                                                            |
    |    This option deletes all partitions and creates a new protective MBR.  |
    |    Proceed? (Y/N): y                                                     |
    |                                                                          |
    |    Create Partition 1 (/boot):                                           |
    |    Command: n                                                            |
    |    Partition Number:  (RETURN key for 1)                                 |
    |    First sector:                                                         |
    |    Last sector: +128M                                                    |
    |    Hex Code:                                                             |
    |                                                                          |
    |    Create Partition 2 (UEFI ESP):                                        |
    |    Command: n                                                            |
    |    Partition Number:  (RETURN key for 2)                                 |
    |    First sector:                                                         |
    |    Last sector: +33M                                                     |
    |    Hex Code: EF00                                                        |
    |                                                                          | 
    |    Create Partition 3 (SWAP):                                            |
    |    Command: n                                                            |
    |    Partition Number:  (RETURN key for 3)                                 |
    |    First sector:                                                         |
    |    Last sector: +512                                                     |
    |    Hex Code: 8200                                                        |
    |                                                                          |
    |    Create Partition 4 (/):                                               |
    |    Command: n                                                            |
    |    Partition Number:  (RETURN key for 4)                                 |
    |    First sector:                                                         |
    |    Last sector:  (RETURN key for rest of disk)                           |
    |    Hex Code:                                                             |
    |                                                                          |
    |    Write Partition Table To Disk:                                        |
    |    Command: w                                                            |
    |    Do you want to proceed? (Y/N): Y                                      |
    |                                                                          |
    +--------------------------------------------------------------------------+

[5.0] References
________________________________________________________________________________

[0] https://wiki.gentoo.org/wiki/Handbook:AMD64/Installation/Disks
[1] http://www.uefi.org/sites/default/files/resources/UEFI%202_5.pdf
[2] https://wiki.archlinux.org/index.php/file_systems
[3] https://wiki.archlinux.org/index.php/swap
