EFISTUB
________________________________________________________________________________

For some UEFI users, the Linux kernel has the ability to act as an EFI
executable, which simplifies the boot process by removing the need for a
bootloader.


Prerequisites
________________________________________________________________________________

Install efibootmgr

+------------------------------------------------------------------------------+
|                                                                              |
|   $ kiss b efibootmgr && kiss i efibootmgr                                   |
|                                                                              |
+------------------------------------------------------------------------------+

After mounting efivarfs (@/uefi/efivarfs), enable EFISTUB support in the kernel
with CONFIG_EFI_STUB=y. In menuconfig, this is located at:

+------------------------------------------------------------------------------+
|                                                                              |
|   Processor type and features  --->                                          |
|      [*] EFI runtime service support                                         |
|      [*]   EFI stub support                                                  |
|                                                                              |
+------------------------------------------------------------------------------+

Then recompile and install the kernel. Keep the kernel's name as vmlinuz, and
not vmlinuz-VERSION otherwise the boot entry will have to be updated for every
new kernel update.


Creating a UEFI boot entry
________________________________________________________________________________

Use the following command to create a boot entry. Replace /dev/sdXN with your
EFI system partition and /dev/sdYM is your root partition. Check to see that
the entry was added with 'efibootmgr --verbose'.

+------------------------------------------------------------------------------+
|                                                                              |
|   $ efibootmgr --disk /dev/sdX \                                             |
|                --part N \                                                    |
|                --create "KISS Linux" \                                       |
|                --loader '/vmlinuz' \                                         |
|                --unicode 'root=/dev/sdYM' \                                  |
|                --verbose                                                     |
|                                                                              |
+------------------------------------------------------------------------------+

Find the entry's boot number XXXX, and the other entry's boot numbers (YYYY,
ZZZZ, and so on), and set it as the first in the boot order with:

+------------------------------------------------------------------------------+
|                                                                              |
|   $ efibootmgr --bootorder XXXX,YYYY,ZZZZ --verbose
|                                                                              |
+------------------------------------------------------------------------------+

The root partition can also be referred to by its partition UUID which can be
found using blkid.

+------------------------------------------------------------------------------+
|                                                                              |
|   --unicode 'root=PARTUUID=aaaaaaaa-aaaa-4aaa-aaa-aaaaaaaaaaaa'
|                                                                              |
+------------------------------------------------------------------------------+

In the above command, the --unicode option specifies the parameters passed to
the kernel. If you require other parameters to boot your system, pass them
here.


Removing a UEFI boot entry
________________________________________________________________________________

To remove an entry, find your entry's boot number XXXX using 'efibootmgr
--verbose' and run:

+------------------------------------------------------------------------------+
|                                                                              |
|   $ efibootmgr --bootnum XXXX --delete-bootnum
|                                                                              |
+------------------------------------------------------------------------------+
